// <auto-generated />
using System;
using MAVI.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MAVI.DataAccess.Migrations
{
    [DbContext(typeof(DataDbContext))]
    partial class DataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MAVI.Domain.Models.Post.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CommentsText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LikedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("LikesPhotos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserPhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Caption = "Explorând orașul vechi.",
                            CommentsText = "Super poza!",
                            LikedBy = "alice",
                            LikesPhotos = "[]",
                            Photo = "https://picsum.photos/seed/post1/600/400",
                            Tag = "urban",
                            Time = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            UserPhoto = "https://robohash.org/user1?set=set4",
                            Username = "john_doe"
                        },
                        new
                        {
                            Id = 2,
                            Caption = "Vacanță în natură.",
                            CommentsText = "Ce peisaj!",
                            LikedBy = "bob",
                            LikesPhotos = "[]",
                            Photo = "https://picsum.photos/seed/post2/600/400",
                            Tag = "nature",
                            Time = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            UserPhoto = "https://robohash.org/user2?set=set4",
                            Username = "jane_smith"
                        },
                        new
                        {
                            Id = 3,
                            Caption = "Cafeaua de dimineață contează.",
                            CommentsText = "Și eu ador cafeaua!",
                            LikedBy = "lucy",
                            LikesPhotos = "[]",
                            Photo = "https://picsum.photos/seed/post3/600/400",
                            Tag = "coffee",
                            Time = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            UserPhoto = "https://robohash.org/user3?set=set4",
                            Username = "michael23"
                        },
                        new
                        {
                            Id = 4,
                            Caption = "Am descoperit un colț liniștit.",
                            CommentsText = "Unde este locul ăsta?",
                            LikedBy = "tom",
                            LikesPhotos = "[]",
                            Photo = "https://picsum.photos/seed/post4/600/400",
                            Tag = "hiddenplaces",
                            Time = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            UserPhoto = "https://robohash.org/user4?set=set4",
                            Username = "clara_l"
                        },
                        new
                        {
                            Id = 5,
                            Caption = "Zâmbetul face ziua mai bună 😊",
                            CommentsText = "Exact ce aveam nevoie azi!",
                            LikedBy = "sara",
                            LikesPhotos = "[]",
                            Photo = "https://picsum.photos/seed/post5/600/400",
                            Tag = "smile",
                            Time = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            UserPhoto = "https://robohash.org/user5?set=set4",
                            Username = "dani_k"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
